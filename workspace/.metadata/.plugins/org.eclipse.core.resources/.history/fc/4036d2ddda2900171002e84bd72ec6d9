package testi_Sele_testNG;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class testi_Sele_testNG {
	private WebDriver driver;
	private WebDriverWait wait;	

	@Test
	public void main() throws InterruptedException {
		String userlogin = "klacuk070@mail.ru";
		String usrePassword = "Sxsblpwiwnbbhlyucrk3";

		driver.get("http://www.mail.ru");
		driver.findElement(By.id("mailbox__login")).clear();
		driver.findElement(By.id("mailbox__login")).sendKeys(userlogin);
		driver.findElement(By.id("mailbox__password")).clear();
		driver.findElement(By.id("mailbox__password")).sendKeys(usrePassword);
		// ждём появления кнопки на "недозагруженной" странице
		WebElement button = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("mailbox__auth__button")));
		button.click();// кликаем
		wait.until(ExpectedConditions.stalenessOf(button));// ждём исчезновения
															// кнопки, то есть
															// "выгрузки"
															// страницы
		// driver.findElement(By.id("mailbox__auth__button")).click();

		WebElement button1 = wait
				.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//tr/td[1]/div/div/div/span/i[3]")));
		
			String checkIn = button1.getText();
			Assert.assertEquals(checkIn, userlogin);
			System.out.println(checkIn);

		
		
	}

	@BeforeMethod
	public void beforeMethod() {
		System.setProperty("webdriver.gecko.driver", "/usr/local/Cellar/chromedriver/2.29/bin/chromedriver");
		DesiredCapabilities capabilities = new DesiredCapabilities();
		capabilities.setCapability(CapabilityType.PAGE_LOAD_STRATEGY, "eager");
		driver = new ChromeDriver();
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		wait = new WebDriverWait(driver, 15);
	}

	@AfterMethod
	public void afterMethod() {
		driver.quit();
	}

}
